geogMask = TRUE, region=r, meanThresh = NULL, varThresh = NULL,
detrend = TRUE, standardize = TRUE, nPC = NULL, method = "ward",
hybrid = FALSE, kH = NULL, members = NULL, nSplit = 1,
upperTri = TRUE, verbose = TRUE, validClimR = TRUE,
k = k[c], minSize = 1, alpha = 0.01, plot = TRUE,
colPalette = NULL, hang = -1, labels = FALSE), region_params))
dev.off()
# Save clustering plot
pdf(paste0("clustering/", r, "_dendo.pdf"))
plot(y, hang = -1, labels = FALSE)
dev.off()
?plot
plot(y, hang = -1, labels = FALSE, xlab=FALSE)
# Save clustering plot
pdf(paste0("clustering/", r, "_dendo.pdf"))
plot(y, hang = -1, labels = FALSE, xlab=FALSE)
dev.off()
# Save clustering plot
pdf(paste0("clustering/", r, "_dendo.pdf"))
plot(y, hang = -1, labels = FALSE)
dev.off()
# Process each region
regions <- c("Africa", "Americas", "Asia", "Europe", "Oceania", "Northern America")
for (c in seq_along(regions)) {
r <- regions[c]
print(paste0("Clustering starts for: ", r))
region_params <- if (r == "Americas") {
list(region = c("South America", "Central America"))
} else if (r == "Northern America") {
list(region = r)
} else {
list(continent = r)
}
y <- do.call(HiClimR, c(list(mdata, lon = lon, lat = lat, lonStep = 1, latStep = 1,
geogMask = TRUE, region=r, meanThresh = NULL, varThresh = NULL,
detrend = TRUE, standardize = TRUE, nPC = NULL, method = "ward",
hybrid = FALSE, kH = NULL, members = NULL, nSplit = 1,
upperTri = TRUE, verbose = TRUE, validClimR = TRUE,
k = k[c], minSize = 1, alpha = 0.01, plot = TRUE,
colPalette = NULL, hang = -1, labels = FALSE), region_params))
# Save clustering plot
pdf(paste0("clustering/", r, "_dendo.pdf"))
plot(y, hang = -1, labels = FALSE)
dev.off()
#pdf(paste0("clustering/", r, ".pdf"))
#RegionsMap <- matrix(y$region, nrow = length(unique(y$coords[, 1])), byrow = TRUE)
#image(unique(y$coords[, 1]), (sort(unique(y$coords[, 2]))), RegionsMap, col = colors_plot[1:k[c]])
#legend("bottomleft", legend = colors_plot[1:k[c]], col = colors_plot[1:k[c]], pch = 15, cex = 0.5, ncol = 2)
#dev.off()
# Export region map and mean timeseries into NetCDF-4 file and raster (tiff)
y.nc <- HiClimR2nc(y = y, ncfile = paste0("clustering/", r, ".nc"), timeunit = "years", dataunit = "mm")
y.nctotiff <- brick(paste0("clustering/", r, ".nc"), varname = "region")
writeRaster(y.nctotiff, paste0("clustering/", r, ".tiff"))
coords_df <- data.frame(lon = y$coords[, 1], lat = y$coords[, 2], region = as.factor(y$region))
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = colors_plot[1:k[c]]) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
# Process each cluster in the region
for (cluster in unique(y$region)) {
cluster_mdata <- mdata[y$region == cluster & !is.na(y$region), ]
cluster_mdata <- apply(cluster_mdata, 1, scale) %>% apply(2, function(x) detrend(x, lowess = TRUE))
# PCA and permutation test
print(paste0("PCA for cluster: ", cluster, " in ", r))
pca_prcomp <- prcomp(cluster_mdata, center = TRUE, scale = TRUE)
pca_prcomp_perm <- pca_eigenperm(t(cluster_mdata))
pca_rand95 <- data.frame(Random_Eigenvalues = apply(pca_prcomp_perm, 2, quantile, 0.95),
PC = colnames(pca_prcomp$rotation)) %>%
mutate(Eigenvalues = pca_prcomp$sdev^2)
pca_rand95_long <- gather(pca_rand95[1:3, ], key = "Variable", value = "Value", -PC)
# Save permutation plot
ggplot(pca_rand95_long, aes(PC, Value, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(y = "Eigenvalue", x = "", fill = "") +
theme_classic()
ggsave(paste0("permutation/", r, "_cluster", cluster, ".pdf"), width = 20, height = 13, units = "cm")
summ <- summary(pca_prcomp)
variance_explained_3pcs <- summ$importance[2, 1:3]
raster_variance_explained_pc <- y.nctotiff
raster_variance_explained_pc[!y$region %in% cluster] <- NA
# Process each PC
for (pc in 1:3) {
if (pca_rand95_long$Value[3 + pc] > pca_rand95_long$Value[pc]) {
scores_plot <- data.frame(year = year_range, score = pca_prcomp$x[, pc])
df_plot <- merge(scores_plot, oscillations)
pdf(paste0("acf/", r, "_cluster", cluster, "_pc", pc, ".pdf"))
acf(df_plot$score)
dev.off()
# Cross-correlation analysis
for (ind in names(df_plot)[3:8]) {
ccf_temp <- ccf(df_plot$score, df_plot[[ind]], lag.max = 5)
if (max(abs(ccf_temp$acf)) > 0.3) {
raster_variance_explained_pc[y$region == cluster] <- variance_explained_3pcs[pc]
names_ccf <- c(names_ccf, paste0(r, "_cluster", cluster, "_ccf", pc, "_", ind))
ccf_temp_all <- rbind(ccf_temp_all, ccf_temp$acf)
}
if (max(abs(ccf_temp$acf)) > 0.4) {
raster_variance_explained_pc[y$region == cluster] <- variance_explained_3pcs[pc]
writeRaster(raster_variance_explained_pc, paste0("pca_04_explained/", r, cluster, "_pc", pc, "_", ind, ".tiff"))
pdf(paste0("pca_04/", r, "_cluster", cluster, "_ccf", pc, "_", ind, ".pdf"))
ccf(df_plot$score, df_plot[[ind]], lag.max = 5, ylim = c(-0.5, 0.5),
ylab = paste0("Correlation PC", pc, " - ", ind),
main = paste0("CCF between PC and ", ind, " oscillation"))
dev.off()
names_ccf_04 <- c(names_ccf_04, paste0(r, "_cluster", cluster, "_ccf", pc, "_", ind))
ccf_temp_all_04 <- rbind(ccf_temp_all_04, ccf_temp$acf)
}
}
} else {
print(paste0("NON SIGNIFICANT PCA ADDED: ", r, "_cluster", cluster, "_ccf", pc))
}
}
}
}
# Process each region
regions <- c("Africa", "Americas", "Asia", "Europe", "Oceania", "Northern America")
for (c in seq_along(regions)) {
r <- regions[c]
print(paste0("Clustering starts for: ", r))
region_params <- if (r == "Americas") {
list(region = c("South America", "Central America"))
} else if (r == "Northern America") {
list(region = r)
} else {
list(continent = r)
}
y <- do.call(HiClimR, c(list(mdata, lon = lon, lat = lat, lonStep = 1, latStep = 1,
geogMask = TRUE, region=r, meanThresh = NULL, varThresh = NULL,
detrend = TRUE, standardize = TRUE, nPC = NULL, method = "ward",
hybrid = FALSE, kH = NULL, members = NULL, nSplit = 1,
upperTri = TRUE, verbose = TRUE, validClimR = TRUE,
k = k[c], minSize = 1, alpha = 0.01, plot = FALSE,
colPalette = NULL, hang = -1, labels = FALSE), region_params))
# Save clustering plot
pdf(paste0("clustering/", r, "_dendo.pdf"))
plot(y, hang = -1, labels = FALSE)
dev.off()
#pdf(paste0("clustering/", r, ".pdf"))
#RegionsMap <- matrix(y$region, nrow = length(unique(y$coords[, 1])), byrow = TRUE)
#image(unique(y$coords[, 1]), (sort(unique(y$coords[, 2]))), RegionsMap, col = colors_plot[1:k[c]])
#legend("bottomleft", legend = colors_plot[1:k[c]], col = colors_plot[1:k[c]], pch = 15, cex = 0.5, ncol = 2)
#dev.off()
# Export region map and mean timeseries into NetCDF-4 file and raster (tiff)
y.nc <- HiClimR2nc(y = y, ncfile = paste0("clustering/", r, ".nc"), timeunit = "years", dataunit = "mm")
y.nctotiff <- brick(paste0("clustering/", r, ".nc"), varname = "region")
writeRaster(y.nctotiff, paste0("clustering/", r, ".tiff"))
coords_df <- data.frame(lon = y$coords[, 1], lat = y$coords[, 2], region = as.factor(y$region))
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = colors_plot[1:k[c]]) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
# Process each cluster in the region
for (cluster in unique(y$region)) {
cluster_mdata <- mdata[y$region == cluster & !is.na(y$region), ]
cluster_mdata <- apply(cluster_mdata, 1, scale) %>% apply(2, function(x) detrend(x, lowess = TRUE))
# PCA and permutation test
print(paste0("PCA for cluster: ", cluster, " in ", r))
pca_prcomp <- prcomp(cluster_mdata, center = TRUE, scale = TRUE)
pca_prcomp_perm <- pca_eigenperm(t(cluster_mdata))
pca_rand95 <- data.frame(Random_Eigenvalues = apply(pca_prcomp_perm, 2, quantile, 0.95),
PC = colnames(pca_prcomp$rotation)) %>%
mutate(Eigenvalues = pca_prcomp$sdev^2)
pca_rand95_long <- gather(pca_rand95[1:3, ], key = "Variable", value = "Value", -PC)
# Save permutation plot
ggplot(pca_rand95_long, aes(PC, Value, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(y = "Eigenvalue", x = "", fill = "") +
theme_classic()
ggsave(paste0("permutation/", r, "_cluster", cluster, ".pdf"), width = 20, height = 13, units = "cm")
summ <- summary(pca_prcomp)
variance_explained_3pcs <- summ$importance[2, 1:3]
raster_variance_explained_pc <- y.nctotiff
raster_variance_explained_pc[!y$region %in% cluster] <- NA
# Process each PC
for (pc in 1:3) {
if (pca_rand95_long$Value[3 + pc] > pca_rand95_long$Value[pc]) {
scores_plot <- data.frame(year = year_range, score = pca_prcomp$x[, pc])
df_plot <- merge(scores_plot, oscillations)
pdf(paste0("acf/", r, "_cluster", cluster, "_pc", pc, ".pdf"))
acf(df_plot$score)
dev.off()
# Cross-correlation analysis
for (ind in names(df_plot)[3:8]) {
ccf_temp <- ccf(df_plot$score, df_plot[[ind]], lag.max = 5)
if (max(abs(ccf_temp$acf)) > 0.3) {
raster_variance_explained_pc[y$region == cluster] <- variance_explained_3pcs[pc]
names_ccf <- c(names_ccf, paste0(r, "_cluster", cluster, "_ccf", pc, "_", ind))
ccf_temp_all <- rbind(ccf_temp_all, ccf_temp$acf)
}
if (max(abs(ccf_temp$acf)) > 0.4) {
raster_variance_explained_pc[y$region == cluster] <- variance_explained_3pcs[pc]
writeRaster(raster_variance_explained_pc, paste0("pca_04_explained/", r, cluster, "_pc", pc, "_", ind, ".tiff"))
pdf(paste0("pca_04/", r, "_cluster", cluster, "_ccf", pc, "_", ind, ".pdf"))
ccf(df_plot$score, df_plot[[ind]], lag.max = 5, ylim = c(-0.5, 0.5),
ylab = paste0("Correlation PC", pc, " - ", ind),
main = paste0("CCF between PC and ", ind, " oscillation"))
dev.off()
names_ccf_04 <- c(names_ccf_04, paste0(r, "_cluster", cluster, "_ccf", pc, "_", ind))
ccf_temp_all_04 <- rbind(ccf_temp_all_04, ccf_temp$acf)
}
}
} else {
print(paste0("NON SIGNIFICANT PCA ADDED: ", r, "_cluster", cluster, "_ccf", pc))
}
}
}
}
# Process each region
regions <- c("Africa", "Americas", "Asia", "Europe", "Oceania", "Northern America")
for (c in seq_along(regions)) {
r <- regions[c]
print(paste0("Clustering starts for: ", r))
region_params <- if (r == "Americas") {
list(region = c("South America", "Central America"))
} else if (r == "Northern America") {
list(region = r)
} else {
list(continent = r)
}
y <- do.call(HiClimR, c(list(mdata, lon = lon, lat = lat, lonStep = 1, latStep = 1,
geogMask = TRUE, region=r, meanThresh = NULL, varThresh = NULL,
detrend = TRUE, standardize = TRUE, nPC = NULL, method = "ward",
hybrid = FALSE, kH = NULL, members = NULL, nSplit = 1,
upperTri = TRUE, verbose = TRUE, validClimR = TRUE,
k = k[c], minSize = 1, alpha = 0.01, plot = FALSE,
colPalette = NULL, hang = -1, labels = FALSE), region_params))
# Save clustering plot
pdf(paste0("clustering/", r, "_dendo.pdf"))
plot(y, hang = -1, labels = FALSE)
dev.off()
#pdf(paste0("clustering/", r, ".pdf"))
#RegionsMap <- matrix(y$region, nrow = length(unique(y$coords[, 1])), byrow = TRUE)
#image(unique(y$coords[, 1]), (sort(unique(y$coords[, 2]))), RegionsMap, col = colors_plot[1:k[c]])
#legend("bottomleft", legend = colors_plot[1:k[c]], col = colors_plot[1:k[c]], pch = 15, cex = 0.5, ncol = 2)
#dev.off()
# Export region map and mean timeseries into NetCDF-4 file and raster (tiff)
y.nc <- HiClimR2nc(y = y, ncfile = paste0("clustering/", r, ".nc"), timeunit = "years", dataunit = "mm")
y.nctotiff <- brick(paste0("clustering/", r, ".nc"), varname = "region")
writeRaster(y.nctotiff, paste0("clustering/", r, ".tiff"))
coords_df <- data.frame(lon = y$coords[, 1], lat = y$coords[, 2], region = as.factor(y$region))
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = colors_plot[1:k[c]]) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
# Process each cluster in the region
for (cluster in unique(y$region)) {
cluster_mdata <- mdata[y$region == cluster & !is.na(y$region), ]
cluster_mdata <- apply(cluster_mdata, 1, scale) %>% apply(2, function(x) detrend(x, lowess = TRUE))
# PCA and permutation test
print(paste0("PCA for cluster: ", cluster, " in ", r))
pca_prcomp <- prcomp(cluster_mdata, center = TRUE, scale = TRUE)
pca_prcomp_perm <- pca_eigenperm(t(cluster_mdata))
pca_rand95 <- data.frame(Random_Eigenvalues = apply(pca_prcomp_perm, 2, quantile, 0.95),
PC = colnames(pca_prcomp$rotation)) %>%
mutate(Eigenvalues = pca_prcomp$sdev^2)
pca_rand95_long <- gather(pca_rand95[1:3, ], key = "Variable", value = "Value", -PC)
# Save permutation plot
ggplot(pca_rand95_long, aes(PC, Value, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(y = "Eigenvalue", x = "", fill = "") +
theme_classic()
ggsave(paste0("permutation/", r, "_cluster", cluster, ".pdf"), width = 20, height = 13, units = "cm")
summ <- summary(pca_prcomp)
variance_explained_3pcs <- summ$importance[2, 1:3]
raster_variance_explained_pc <- y.nctotiff
raster_variance_explained_pc[!y$region %in% cluster] <- NA
# Process each PC
for (pc in 1:3) {
if (pca_rand95_long$Value[3 + pc] > pca_rand95_long$Value[pc]) {
scores_plot <- data.frame(year = year_range, score = pca_prcomp$x[, pc])
df_plot <- merge(scores_plot, oscillations)
pdf(paste0("acf/", r, "_cluster", cluster, "_pc", pc, ".pdf"))
acf(df_plot$score)
dev.off()
# Cross-correlation analysis
for (ind in names(df_plot)[3:8]) {
ccf_temp <- ccf(df_plot$score, df_plot[[ind]], lag.max = 5)
if (max(abs(ccf_temp$acf)) > 0.3) {
raster_variance_explained_pc[y$region == cluster] <- variance_explained_3pcs[pc]
names_ccf <- c(names_ccf, paste0(r, "_cluster", cluster, "_ccf", pc, "_", ind))
ccf_temp_all <- rbind(ccf_temp_all, ccf_temp$acf)
}
if (max(abs(ccf_temp$acf)) > 0.4) {
raster_variance_explained_pc[y$region == cluster] <- variance_explained_3pcs[pc]
writeRaster(raster_variance_explained_pc, paste0("pca_04_explained/", r, cluster, "_pc", pc, "_", ind, ".tiff"))
pdf(paste0("pca_04/", r, "_cluster", cluster, "_ccf", pc, "_", ind, ".pdf"))
ccf(df_plot$score, df_plot[[ind]], lag.max = 5, ylim = c(-0.5, 0.5),
ylab = paste0("Correlation PC", pc, " - ", ind),
main = paste0("CCF between PC and ", ind, " oscillation"))
dev.off()
names_ccf_04 <- c(names_ccf_04, paste0(r, "_cluster", cluster, "_ccf", pc, "_", ind))
ccf_temp_all_04 <- rbind(ccf_temp_all_04, ccf_temp$acf)
}
}
} else {
print(paste0("NON SIGNIFICANT PCA ADDED: ", r, "_cluster", cluster, "_ccf", pc))
}
}
}
}
plot(y, hang = -1, labels = FALSE)
warnings()
plot(y, hang = -1, labels = FALSE, axes=FALSE)
# Save clustering plot
pdf(paste0("clustering/", r, "_dendo.pdf"))
plot(y, hang = -1, labels = FALSE, axes=FALSE)
dev.off()
plot(y, hang = -1, labels = FALSE, xlab='')
y
y$mask
# Process each region
regions <- c("Africa", "Americas", "Asia", "Europe", "Oceania", "Northern America")
for (c in seq_along(regions)) {
r <- regions[c]
print(paste0("Clustering starts for: ", r))
region_params <- if (r == "Americas") {
list(region = c("South America", "Central America"))
} else if (r == "Northern America") {
list(region = r)
} else {
list(continent = r)
}
y <- do.call(HiClimR, c(list(mdata, lon = lon, lat = lat, lonStep = 1, latStep = 1,
geogMask = TRUE, region=r, meanThresh = NULL, varThresh = NULL,
detrend = TRUE, standardize = TRUE, nPC = NULL, method = "ward",
hybrid = FALSE, kH = NULL, members = NULL, nSplit = 1,
upperTri = TRUE, verbose = TRUE, validClimR = TRUE,
k = k[c], minSize = 1, alpha = 0.01, plot = FALSE,
colPalette = NULL, hang = -1, labels = FALSE), region_params))
# Save clustering plot
pdf(paste0("clustering/", r, "_dendo.pdf"))
plot(y, hang = -1, labels = FALSE, xlab='')
dev.off()
#pdf(paste0("clustering/", r, ".pdf"))
#RegionsMap <- matrix(y$region, nrow = length(unique(y$coords[, 1])), byrow = TRUE)
#image(unique(y$coords[, 1]), (sort(unique(y$coords[, 2]))), RegionsMap, col = colors_plot[1:k[c]])
#legend("bottomleft", legend = colors_plot[1:k[c]], col = colors_plot[1:k[c]], pch = 15, cex = 0.5, ncol = 2)
#dev.off()
# Export region map and mean timeseries into NetCDF-4 file and raster (tiff)
y.nc <- HiClimR2nc(y = y, ncfile = paste0("clustering/", r, ".nc"), timeunit = "years", dataunit = "mm")
y.nctotiff <- brick(paste0("clustering/", r, ".nc"), varname = "region")
writeRaster(y.nctotiff, paste0("clustering/", r, ".tiff"))
coords_df <- data.frame(lon = y$coords[, 1], lat = y$coords[, 2], region = as.factor(y$region))
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = colors_plot[1:k[c]]) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
# Process each cluster in the region
for (cluster in unique(y$region)) {
cluster_mdata <- mdata[y$region == cluster & !is.na(y$region), ]
cluster_mdata <- apply(cluster_mdata, 1, scale) %>% apply(2, function(x) detrend(x, lowess = TRUE))
# PCA and permutation test
print(paste0("PCA for cluster: ", cluster, " in ", r))
pca_prcomp <- prcomp(cluster_mdata, center = TRUE, scale = TRUE)
pca_prcomp_perm <- pca_eigenperm(t(cluster_mdata))
pca_rand95 <- data.frame(Random_Eigenvalues = apply(pca_prcomp_perm, 2, quantile, 0.95),
PC = colnames(pca_prcomp$rotation)) %>%
mutate(Eigenvalues = pca_prcomp$sdev^2)
pca_rand95_long <- gather(pca_rand95[1:3, ], key = "Variable", value = "Value", -PC)
# Save permutation plot
ggplot(pca_rand95_long, aes(PC, Value, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(y = "Eigenvalue", x = "", fill = "") +
theme_classic()
ggsave(paste0("permutation/", r, "_cluster", cluster, ".pdf"), width = 20, height = 13, units = "cm")
summ <- summary(pca_prcomp)
variance_explained_3pcs <- summ$importance[2, 1:3]
raster_variance_explained_pc <- y.nctotiff
raster_variance_explained_pc[!y$region %in% cluster] <- NA
# Process each PC
for (pc in 1:3) {
if (pca_rand95_long$Value[3 + pc] > pca_rand95_long$Value[pc]) {
scores_plot <- data.frame(year = year_range, score = pca_prcomp$x[, pc])
df_plot <- merge(scores_plot, oscillations)
pdf(paste0("acf/", r, "_cluster", cluster, "_pc", pc, ".pdf"))
acf(df_plot$score)
dev.off()
# Cross-correlation analysis
for (ind in names(df_plot)[3:8]) {
ccf_temp <- ccf(df_plot$score, df_plot[[ind]], lag.max = 5)
if (max(abs(ccf_temp$acf)) > 0.3) {
raster_variance_explained_pc[y$region == cluster] <- variance_explained_3pcs[pc]
names_ccf <- c(names_ccf, paste0(r, "_cluster", cluster, "_ccf", pc, "_", ind))
ccf_temp_all <- rbind(ccf_temp_all, ccf_temp$acf)
}
if (max(abs(ccf_temp$acf)) > 0.4) {
raster_variance_explained_pc[y$region == cluster] <- variance_explained_3pcs[pc]
writeRaster(raster_variance_explained_pc, paste0("pca_04_explained/", r, cluster, "_pc", pc, "_", ind, ".tiff"))
pdf(paste0("pca_04/", r, "_cluster", cluster, "_ccf", pc, "_", ind, ".pdf"))
ccf(df_plot$score, df_plot[[ind]], lag.max = 5, ylim = c(-0.5, 0.5),
ylab = paste0("Correlation PC", pc, " - ", ind),
main = paste0("CCF between PC and ", ind, " oscillation"))
dev.off()
names_ccf_04 <- c(names_ccf_04, paste0(r, "_cluster", cluster, "_ccf", pc, "_", ind))
ccf_temp_all_04 <- rbind(ccf_temp_all_04, ccf_temp$acf)
}
}
} else {
print(paste0("NON SIGNIFICANT PCA ADDED: ", r, "_cluster", cluster, "_ccf", pc))
}
}
}
}
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = colors_plot[1:k[c]]) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
## Export region map and mean timeseries into NetCDF-4 file and raster (tiff)
y.nc <- HiClimR2nc(y=y, ncfile=paste0("clustering/",r,".nc"), timeunit="years", dataunit="mm")
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = colors_plot[1:k[c]]) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = c(colors_plot[1:k[c]],"white") +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
colors_plot[1:k[c]]
k
colors_plot
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
#scale_fill_manual(values = c(colors_plot[1:k[c]],"white") +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = c(1:5)) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
colors
ggsave(paste0("clustering/", r, "_map.pdf"))
colro
ggsave(paste0("clustering/", r, "_map.pdf"))
colors()
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = colors_plot[1:k[c]]) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
colors_plot[1:k[c]]
c(colors_plot[1:k[c]], 10)
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = c(colors_plot[1:k[c]], 0)) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = c(0,colors_plot[1:k[c]])) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = c(colors_plot[1:k[c]], 0)) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggplot(coords_df, aes(x = lon, y = lat, fill = region)) +
geom_tile() +
scale_fill_manual(values = c(colors_plot[1:k[c]], rep(0,10))) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggplot(coords_df, aes(x = lon, y = lat, fill = region, na-rm=TRUE)) +
ggplot(coords_df, aes(x = lon, y = lat, fill = region, na.rm=TRUE)) +
geom_tile() +
scale_fill_manual(values = c(colors_plot[1:k[c]])) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
ggplot(coords_df, aes(x = lon, y = lat, fill = region), na.rm=TRUE) +
geom_tile() +
scale_fill_manual(values = c(colors_plot[1:k[c]])) +
theme_minimal() +
labs(title = paste("Region:", r), x = "Longitude", y = "Latitude") +
coord_fixed()
ggsave(paste0("clustering/", r, "_map.pdf"))
?ggsave
library(ncdf4); library(HiClimR); library(raster);library(astsa);library(tidyverse) #library(pcaMethods)
library(ncdf4); library(HiClimR); library(raster);library(astsa);library(tidyverse) #library(pcaMethods)
#Set working directory and create necessary folders
setwd("/home/dmercado/Documents/ClimOsciLakes/")
