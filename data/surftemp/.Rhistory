if (direction_index=="positive"){
pca_data_index <- pca_data_index[pca_data_index$index>0,]
}else{
pca_data_index <- pca_data_index[pca_data_index$index<0,]
}
#plot
if (i==index_temp){
pdf(file=paste0("plot/plot2/regression/",i,"_",
direction_index,"_c",cluster_temp,
"_i",index_temp,"_pc",pc_temp,".pdf"))
plot(pc ~ index, data=pca_data_index)
abline(lm(pc ~ index, data=pca_data_index), col = "blue", lwd = 2)
dev.off()
}
# Fit the linear regression model
model <- lm(pc ~ index, data=pca_data_index)
#add regression to plot
#abline(model, col="red")
# Extract the slope and intercept
coefficients <- coef(model)
slope_save <- c(slope_save, coefficients[2])
intercept_save <- c(intercept_save, coefficients[1])
}
summary_ccf_pc10per$slope <- slope_save
summary_ccf_pc10per$intercept <- intercept_save
#Load clustering map
clustering <- raster(paste0(directory,"/clustering/global.tiff"))
data_temp <- summary_ccf_pc10per[summary_ccf_pc10per$index==i,]
# Aggregate by cluster using sum function
aggregated_data <- data_temp %>%
group_by(cluster) %>%
summarize(
pc_variance_sum = sum(pc_variance),
slope_mean = mean(slope),
intercept_mean = mean(intercept)
)
aggregated_data$direction <- direction_index
aggregated_data$index <- i
all_data <- rbind(all_data, aggregated_data)
#Set map
slope_map_symbol <- clustering
for (k_temp in 1:k){
if (k_temp %in% aggregated_data$cluster){
slope_map_symbol[clustering[]==k_temp] <- aggregated_data$slope_mean[aggregated_data$cluster==k_temp][1]
#pcvariance_map[clustering[]==k_temp] <- aggregated_data$pc_variance[aggregated_data$cluster==k_temp][1]
}else{
#slope_map_symbol[clustering[]==k_temp] <- round(sort(unique(aggregated_data$slope_mean))[1]-1)
slope_map_symbol[clustering[]==k_temp] <- NA
}
}
#limits = c(sort(unique(r_df$global))[2],range(r_df$global, na.rm=T)[2]))
# Transform the raster data to a data frame
r_df <- as.data.frame(slope_map_symbol, xy = TRUE)
combinations <- length(unique(r_df$global))-2
}
}
#################33
# Order by climate zones according to Beck et al. (2018):
climate_zones <- read.dbf("clustering/climate_zones.dbf")
num_tropical <- sort(climate_zones$DN[climate_zones$X_majority %in% 1:3])
num_dry <- sort(climate_zones$DN[climate_zones$X_majority %in% 4:7])
num_temperate <- sort(climate_zones$DN[climate_zones$X_majority %in% 8:16])
num_continental <- sort(climate_zones$DN[climate_zones$X_majority %in% 17:28])
num_polar <- sort(climate_zones$DN[climate_zones$X_majority %in% 29:30])
order_cz <- c(num_tropical, num_dry, num_temperate, num_continental, num_polar)
for (i in c("enso", "nao", "pdo", "iod")){
df <- all_data[all_data$index==i,]
uni_cluster <- unique(df$cluster)
l_tropical <- length(which(uni_cluster %in% num_tropical))
l_dry <- length(which(uni_cluster %in% num_dry))
l_temperate <- length(which(uni_cluster %in% num_temperate))
l_continental <- length(which(uni_cluster %in% num_continental))
l_polar <- length(which(uni_cluster %in% num_polar))
# Specify the order of clusters
df$cluster <- factor(df$cluster, levels = order_cz)
p2 <- ggplot(df, aes(x = cluster, y = slope_mean, fill = direction)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("positive" = "black", "negative" = "gray")) +
labs(x = "Cluster", fill="Index phase", y = "Mean Decrease/Increase (%)", title = toupper(i)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))+
theme(legend.position = "none")+
annotate("rect", xmin = 0.5, xmax = l_tropical+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "red") +
annotate("rect", xmin = l_tropical+0.5,
xmax = sum(l_tropical+l_dry)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "goldenrod") +
annotate("rect", xmin = sum(l_tropical+l_dry)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "green") +
annotate("rect", xmin = sum(l_tropical+l_dry+l_temperate)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate+l_continental)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "blue") +
annotate("rect", xmin = sum(l_tropical+l_dry+l_temperate+l_continental)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate+l_continental+l_polar)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "violet") +
annotate("text", x = l_tropical/2+0.5, y = max(df$slope_mean) + 5, label = "Tropical", size = 4, color = "black") +
annotate("text", x = sum(l_tropical+l_dry/2)+0.5, y = max(df$slope_mean) + 5, label = "Dry", size = 4, color = "black")+
annotate("text", x = sum(l_tropical+l_dry+l_temperate/2)+0.5, y = max(df$slope_mean) + 5, label = "Temperate", size = 4, color = "black")+
annotate("text", x = sum(l_tropical+l_dry+l_temperate+l_continental/2)+0.5, y = max(df$slope_mean) + 5, label = "Continental", size = 4, color = "black") +
annotate("text", x = sum(l_tropical+l_dry+l_temperate+l_continental+l_polar/2)+0.5, y = max(df$slope_mean) + 5, label = "Polar", size = 4, color = "black")
# Plot the data
#p2 <- ggplot(df, aes(x = factor(cluster), y = slope_mean, fill = direction)) +
#  geom_bar(stat = "identity", position = "dodge") +
#  scale_fill_manual(values = c("positive" = "darkred", "negative" = "blue4")) +
#  labs(x = "Cluster", y = "Slope Mean", title = toupper(i)) +
#  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
#  theme_minimal()
ggsave(filename = paste0("plot/plot2/fig2_",i,".pdf"), plot = p2, width = 20, height = 10, units = "cm")
}
ggsave(filename = paste0("plot/plot2/legendfig2_",i,".pdf"), plot = p2, width = 20, height = 10, units = "cm")
p2 <- ggplot(df, aes(x = cluster, y = slope_mean, fill = direction)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("positive" = "black", "negative" = "gray")) +
labs(x = "Cluster", fill="Index phase", y = "Mean Decrease/Increase (%)", title = toupper(i)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))+
#theme(legend.position = "none")+
annotate("rect", xmin = 0.5, xmax = l_tropical+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "red") +
annotate("rect", xmin = l_tropical+0.5,
xmax = sum(l_tropical+l_dry)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "goldenrod") +
annotate("rect", xmin = sum(l_tropical+l_dry)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "green") +
annotate("rect", xmin = sum(l_tropical+l_dry+l_temperate)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate+l_continental)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "blue") +
annotate("rect", xmin = sum(l_tropical+l_dry+l_temperate+l_continental)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate+l_continental+l_polar)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "violet") +
annotate("text", x = l_tropical/2+0.5, y = max(df$slope_mean) + 5, label = "Tropical", size = 4, color = "black") +
annotate("text", x = sum(l_tropical+l_dry/2)+0.5, y = max(df$slope_mean) + 5, label = "Dry", size = 4, color = "black")+
annotate("text", x = sum(l_tropical+l_dry+l_temperate/2)+0.5, y = max(df$slope_mean) + 5, label = "Temperate", size = 4, color = "black")+
annotate("text", x = sum(l_tropical+l_dry+l_temperate+l_continental/2)+0.5, y = max(df$slope_mean) + 5, label = "Continental", size = 4, color = "black") +
annotate("text", x = sum(l_tropical+l_dry+l_temperate+l_continental+l_polar/2)+0.5, y = max(df$slope_mean) + 5, label = "Polar", size = 4, color = "black")
ggsave(filename = paste0("plot/plot2/fig2_",i,".pdf"), plot = p2, width = 20, height = 10, units = "cm")
p2 <- ggplot(df, aes(x = cluster, y = slope_mean, fill = direction)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("positive" = "black", "negative" = "gray")) +
labs(x = "Cluster", fill="Index phase", y = "Mean Decrease/Increase (%)", title = toupper(i)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))+
theme(legend.position = "none")+
annotate("rect", xmin = 0.5, xmax = l_tropical+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "red") +
annotate("rect", xmin = l_tropical+0.5,
xmax = sum(l_tropical+l_dry)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "goldenrod") +
annotate("rect", xmin = sum(l_tropical+l_dry)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "green") +
annotate("rect", xmin = sum(l_tropical+l_dry+l_temperate)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate+l_continental)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "blue") +
annotate("rect", xmin = sum(l_tropical+l_dry+l_temperate+l_continental)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate+l_continental+l_polar)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "violet") +
annotate("text", x = l_tropical/2+0.5, y = max(df$slope_mean) + 5, label = "Tropical", size = 4, color = "black") +
annotate("text", x = sum(l_tropical+l_dry/2)+0.5, y = max(df$slope_mean) + 5, label = "Dry", size = 4, color = "black")+
annotate("text", x = sum(l_tropical+l_dry+l_temperate/2)+0.5, y = max(df$slope_mean) + 5, label = "Temperate", size = 4, color = "black")+
annotate("text", x = sum(l_tropical+l_dry+l_temperate+l_continental/2)+0.5, y = max(df$slope_mean) + 5, label = "Continental", size = 4, color = "black") +
annotate("text", x = sum(l_tropical+l_dry+l_temperate+l_continental+l_polar/2)+0.5, y = max(df$slope_mean) + 5, label = "Polar", size = 4, color = "black")
ggsave(filename = paste0("plot/plot2/fig2_",i,".pdf"), plot = p2, width = 20, height = 10, units = "cm")
p2 <- ggplot(df, aes(x = cluster, y = slope_mean, fill = direction)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("positive" = "black", "negative" = "gray")) +
labs(x = "Cluster", fill="Index phase", y = "Mean Decrease/Increase (%)", title = toupper(i)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))+
#theme(legend.position = "none")+
annotate("rect", xmin = 0.5, xmax = l_tropical+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "red") +
annotate("rect", xmin = l_tropical+0.5,
xmax = sum(l_tropical+l_dry)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "goldenrod") +
annotate("rect", xmin = sum(l_tropical+l_dry)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "green") +
annotate("rect", xmin = sum(l_tropical+l_dry+l_temperate)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate+l_continental)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "blue") +
annotate("rect", xmin = sum(l_tropical+l_dry+l_temperate+l_continental)+0.5,
xmax = sum(l_tropical+l_dry+l_temperate+l_continental+l_polar)+0.5,
ymin = -Inf, ymax = Inf, alpha = 0.1, fill = "violet") +
annotate("text", x = l_tropical/2+0.5, y = max(df$slope_mean) + 5, label = "Tropical", size = 4, color = "black") +
annotate("text", x = sum(l_tropical+l_dry/2)+0.5, y = max(df$slope_mean) + 5, label = "Dry", size = 4, color = "black")+
annotate("text", x = sum(l_tropical+l_dry+l_temperate/2)+0.5, y = max(df$slope_mean) + 5, label = "Temperate", size = 4, color = "black")+
annotate("text", x = sum(l_tropical+l_dry+l_temperate+l_continental/2)+0.5, y = max(df$slope_mean) + 5, label = "Continental", size = 4, color = "black") +
annotate("text", x = sum(l_tropical+l_dry+l_temperate+l_continental+l_polar/2)+0.5, y = max(df$slope_mean) + 5, label = "Polar", size = 4, color = "black")
ggsave(filename = paste0("plot/plot2/legendfig2_",i,".pdf"), plot = p2, width = 20, height = 10, units = "cm")
library(raster)
library(ggplot2)
library(sf)
library(RColorBrewer)
# Set working directory and create necessary folders
variable <- "surftemp" #surftemp or bottemp
directory_base <- "/home/dmercado/Documents/ClimOsciLakes/"
k <- 47 #number of total clusters
directory  <- paste0(directory_base, "data/",variable)
setwd(directory)
#summary results
summary_ccf <- read.csv("summary_ccf_global.csv")
#add pc variance explained to summary
pc_var <- read.csv("pc_data/pc_proportion_variance_global.csv")
summary_ccf$pc_variance <- NA
for (row in 1:k){
for (pc in 1:3){
summary_ccf$pc_variance[summary_ccf$cluster==row & summary_ccf$pc==pc] <- pc_var[row, (pc+1)]
}
}
#pc variance greater than 10 and remove non-used indexes
summary_ccf_pc10per <- summary_ccf[summary_ccf$pc_variance>=0.10,]
summary_ccf_pc10per <- summary_ccf_pc10per[summary_ccf_pc10per$index!="npgo",] # remove index
summary_ccf_pc10per <- summary_ccf_pc10per[summary_ccf_pc10per$index!="npo",] #remove index
#At NOAA, the official ENSO indicator is the Oceanic Niño Index (ONI)
summary_ccf_pc10per$index[summary_ccf_pc10per$index=="oni"] <- "enso"
#Load clustering map
clustering <- raster(paste0(directory,"/clustering/global.tiff"))
#extract indexes per cluster
list_index <- list()
for (k_temp in 1:k){
list_index[[k_temp]] <- (sort(unique(summary_ccf_pc10per$index[summary_ccf_pc10per$cluster==k_temp])))
}
sorted_strings <- sapply(list_index, function(x) paste(sort(x), collapse = "-"))
table(sorted_strings)
sorted_strings[sorted_strings==""] <- NA
sorted_strings <- toupper(sorted_strings)
sorted_strings[is.na(sorted_strings)] <- "Unrelated"
#Set index map
indexes_map_symbol <- clustering
for (k_temp in 1:k){
indexes_map_symbol[clustering[]==k_temp] <- sorted_strings[k_temp]
}
View(summary_ccf_pc10per)
View(summary_ccf)
# Set working directory and create necessary folders
variable <- "surftemp" #surftemp or bottemp
directory_base <- "/home/dmercado/Documents/ClimOsciLakes/"
k <- 47 #number of total clusters
directory  <- paste0(directory_base, "data/",variable)
setwd(directory)
#summary results
summary_ccf <- read.csv("summary_ccf_global.csv")
#add pc variance explained to summary
pc_var <- read.csv("pc_data/pc_proportion_variance_global.csv")
summary_ccf$pc_variance <- NA
for (row in 1:k){
for (pc in 1:3){
summary_ccf$pc_variance[summary_ccf$cluster==row & summary_ccf$pc==pc] <- pc_var[row, (pc+1)]
}
}
#pc variance greater than 10 and remove non-used indexes
summary_ccf_pc10per <- summary_ccf[summary_ccf$pc_variance>=0.10,]
summary_ccf_pc10per <- summary_ccf_pc10per[summary_ccf_pc10per$index!="npgo",] # remove index
summary_ccf_pc10per <- summary_ccf_pc10per[summary_ccf_pc10per$index!="npo",] #remove index
#At NOAA, the official ENSO indicator is the Oceanic Niño Index (ONI)
summary_ccf_pc10per$index[summary_ccf_pc10per$index=="oni"] <- "enso"
library(foreign)
centroids <- read.dbf("clustering/centroids.dbf")
View(centroids)
centroids <- read.dbf("clustering/climate_zones.dbf")
centroids <- read.dbf("clustering/Clustering.dbf")
centroids <- read.csv("clustering/centroids_coord.csv")
centroids <- read.csv("clustering/centroids_coord.csv")
index_coord <- data.frame(index=c("enso","iod","nao","pdo"),
lon=c(-145, 80,-25,-140),
lat=c(0,-5, 52, 45))
r <- 1
centroids$DN[1]
i <- "enso"
r <- 1
summary_ccf_pc10per$index=="i"
summary_ccf_pc10per$index==i
summary_ccf_pc10per$index==i & centroids$DN==1
summary_ccf_pc10per$index==i & summary_ccf_pc10per$cluster==1
r <- 2
r <- 2
summary_ccf_pc10per$index==i & summary_ccf_pc10per$cluster==1
centroids$DN
View(index_coord)
View(summary_ccf_pc10per)
centroids$DN[r]
r <- 1
centroids$DN[r]
summary_ccf_pc10per$cluster==centroids$DN[r]
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]){
print("yes")
}
i <- "enso"
r <- 1
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]){
print("yes")
}
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index){
print("yes")
}
centroids$index
centroids$index <- NA
centroids$index <- NA
centroids$lon_index <- NA
centroids$lat_index <- NA
index_coord$index==i
index_coord$lon[index_coord$index==i]
centroids$index <- NA
centroids$lon_index <- NA
centroids$lat_index <- NA
for (r in 1:nrow(centroids)){
for (i in c("enso", "iod", "nao", "pdo")){
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index){
centroids$index[r] <- i
centroids$lon_index[r] <- index_coord$lon[index_coord$index==i]
centroids$lat_index[r] <- index_coord$lat[index_coord$index==i]
}
}
}
centroids <- read.csv("clustering/centroids_coord.csv")
# Set index coords:
index_coord <- data.frame(index=c("enso","iod","nao","pdo"),
lon=c(-145, 80,-25,-140),
lat=c(0,-5, 52, 45))
centroids$enso <- NA;centroids$iod <- NA;centroids$nao <- NA;centroids$pdo <- NA
centroids$lon_index <- NA
centroids$lat_index <- NA
i
centroids[i]
centroids$enso <- NA;centroids$iod <- NA;centroids$nao <- NA;centroids$pdo <- NA
centroids$lon_index <- NA
centroids$lat_index <- NA
for (r in 1:nrow(centroids)){
for (i in c("enso", "iod", "nao", "pdo")){
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index){
centroids[i][r] <- Y
centroids$lon_index[r] <- index_coord$lon[index_coord$index==i]
centroids$lat_index[r] <- index_coord$lat[index_coord$index==i]
}
}
}
centroids$enso <- NA;centroids$iod <- NA;centroids$nao <- NA;centroids$pdo <- NA
centroids$lon_index <- NA
centroids$lat_index <- NA
centroids$enso <- NA; centroids$iod <- NA;
centroids$nao <- NA; centroids$pdo <- NA
centroids$lon_index <- NA; centroids$lat_index <- NA
for (r in 1:nrow(centroids)){
for (i in c("enso", "iod", "nao", "pdo")){
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index){
centroids[i][r] <- "Y"
centroids$lon_index[r] <- index_coord$lon[index_coord$index==i]
centroids$lat_index[r] <- index_coord$lat[index_coord$index==i]
}
}
}
r
i
centroids[i][r]
centroids[i]
r
centroids[i][r]
centroids[i]
centroids[i][1]
centroids[i][2]
centroids[i][3]
unlist(centroids[i])[2]
centroids[c(i)]
centroids[c(i)][5]
centroids[c(i)][,5]
centroids[c(i)][5,]
centroids$enso <- NA; centroids$iod <- NA;
centroids$nao <- NA; centroids$pdo <- NA
centroids$lon_index <- NA; centroids$lat_index <- NA
for (r in 1:nrow(centroids)){
for (i in c("enso", "iod", "nao", "pdo")){
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index){
centroids[c(i)][r,] <- "Y"
centroids$lon_index[r] <- index_coord$lon[index_coord$index==i]
centroids$lat_index[r] <- index_coord$lat[index_coord$index==i]
}
}
}
centroids <- read.csv("clustering/centroids_coord.csv")
# Set index coords:
index_coord <- data.frame(index=c("enso","iod","nao","pdo"),
lon=c(-145, 80,-25,-140),
lat=c(0,-5, 52, 45))
centroids$enso <- NA; centroids$iod <- NA;
centroids$nao <- NA; centroids$pdo <- NA
install.packages("geosphere")
library(geosphere)
?distHaversine
centroids$enso <- NA; centroids$iod <- NA;
centroids$nao <- NA; centroids$pdo <- NA
for (r in 1:nrow(centroids)){
for (i in c("enso", "iod", "nao", "pdo")){
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index){
#centroids[c(i)][r,] <- "Y"
# Define coordinates (longitude, latitude)
coord1 <- c(index_coord$lon[index_coord$index==i],
index_coord$lat[index_coord$index==i])
coord2 <- c(centroids$X[r], centroids$Y[r])
# Calculate distance in meters
distance <- distHaversine(coord1, coord2)
print(distance())
centroids[i][r,] <- distance
}
}
}
r
i
centroids[i][r,]
distance
centroids$enso <- NA; centroids$iod <- NA;
centroids$nao <- NA; centroids$pdo <- NA
for (r in 1:nrow(centroids)){
for (i in c("enso", "iod", "nao", "pdo")){
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index){
#centroids[c(i)][r,] <- "Y"
# Define coordinates (longitude, latitude)
coord1 <- c(index_coord$lon[index_coord$index==i],
index_coord$lat[index_coord$index==i])
coord2 <- c(centroids$X[r], centroids$Y[r])
# Calculate distance in meters
distance <- distHaversine(coord1, coord2)
print(distance/1000)
centroids[i][r,] <- distance/1000
}
}
}
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]
r
i
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$cor
summary_ccf_pc10per$cluster==centroids$DN[r]
summary_ccf_pc10per$cluster==centroids$DN[r] & summary_ccf_pc10per$index ==centroids$DN[r]
summary_ccf_pc10per$cluster==centroids$DN[r] & summary_ccf_pc10per$index==i
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r] & summary_ccf_pc10per$index==i]
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r] & summary_ccf_pc10per$index==i,]
centroids$enso <- NA; centroids$iod <- NA;
centroids$nao <- NA; centroids$pdo <- NA
centroids$enso_cor <- NA; centroids$iod_cor <- NA;
centroids$nao_cor <- NA; centroids$pdo_cor <- NA
centroids$enso <- NA; centroids$iod <- NA;
centroids$nao <- NA; centroids$pdo <- NA
centroids$enso_cor <- NA; centroids$iod_cor <- NA;
centroids$nao_cor <- NA; centroids$pdo_cor <- NA
for (r in 1:nrow(centroids)){
for (i in c("enso", "iod", "nao", "pdo")){
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index){
#centroids[c(i)][r,] <- "Y"
# Define coordinates (longitude, latitude)
coord1 <- c(index_coord$lon[index_coord$index==i],
index_coord$lat[index_coord$index==i])
coord2 <- c(centroids$X[r], centroids$Y[r])
# Calculate distance in meters
distance <- distHaversine(coord1, coord2)
print(distance/1000)
centroids[i][r,] <- distance/1000
centroids[paste0(i,"_cor")][r,] <- summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r] & summary_ccf_pc10per$index==i,]$cor
}
}
}
r
i
centroids[paste0(i,"_cor")][r,] <- summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r] & summary_ccf_pc10per$index==i,]$cor
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r] & summary_ccf_pc10per$index==i,]$cor
summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r] & summary_ccf_pc10per$index==i,]
centroids$enso <- NA; centroids$iod <- NA;
centroids$nao <- NA; centroids$pdo <- NA
centroids$enso_cor <- NA; centroids$iod_cor <- NA;
centroids$nao_cor <- NA; centroids$pdo_cor <- NA
for (r in 1:nrow(centroids)){
for (i in c("enso", "iod", "nao", "pdo")){
if (i %in% summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r],]$index){
#centroids[c(i)][r,] <- "Y"
# Define coordinates (longitude, latitude)
coord1 <- c(index_coord$lon[index_coord$index==i],
index_coord$lat[index_coord$index==i])
coord2 <- c(centroids$X[r], centroids$Y[r])
# Calculate distance in meters
distance <- distHaversine(coord1, coord2)
print(distance/1000)
centroids[i][r,] <- distance/1000
centroids[paste0(i,"_cor")][r,] <- mean(summary_ccf_pc10per[summary_ccf_pc10per$cluster==centroids$DN[r] & summary_ccf_pc10per$index==i,]$cor)
}
}
}
plot(centroids$enso, centroids$enso_cor)
cor(centroids$enso, centroids$enso_cor)
cor(centroids$enso, centroids$enso_cor, na-rm=T)
cor(centroids$enso, centroids$enso_cor, na.rm=T)
cor.test(centroids$enso, centroids$enso_cor)
cor.test(centroids$iod, centroids$iod_cor)
cor.test(centroids$iod, centroids$iod_cor, na.rm=t)
cor.test(centroids$iod, centroids$iod_cor, na.rm=T)
cor.test(centroids$nao, centroids$nao_cor, na.rm=T)
cor.test(centroids$pdo, centroids$pdo_cor, na.rm=T)
cor.test(centroids$enso, centroids$enso_cor, na.rm=T)
cor.test(centroids$iod, centroids$iod_cor, na.rm=T)
cor.test(centroids$nao, centroids$nao_cor, na.rm=T)
cor.test(centroids$pdo, centroids$pdo_cor, na.rm=T)
